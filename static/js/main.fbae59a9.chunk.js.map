{"version":3,"sources":["hooks/useSettings.js","api/github.js","hooks/useAlwaysScroll.js","components/PullRequestItem/style.js","components/PullRequestItem/index.js","hooks/useTimeAgo.js","hooks/useReviewsNumbers.js","components/ShareLinkButton/style.js","components/ShareLinkButton/index.js","hooks/useShareLink.js","style.js","App.js","hooks/useGithubApi.js","hooks/useGithubPullRequests.js","hooks/useGithubMergedPullRequests.js","hooks/useCDO.js","hooks/useWeekNumber.js","serviceWorker.js","index.js"],"names":["initialState","token","me","organisation","repositories","filteredTags","requiredTags","daysBeforeWarning","daysBeforeCritical","hoursUntilNotNew","autoScroll","cdoRotation","minNbReviews","onlyNotReviewed","reducer","state","action","type","hasOwnProperty","key","value","Error","GithubApi","opts","this","api","Octokit","authenticate","org","data","predicate","time","newData","filter","item","Date","parse","length","method","params","limitPredicate","limitTime","next","response","getFilteredData","hasNextPage","getNextPage","concat","repo","owner","paginate","pullRequests","getAll","prs","sort","direction","per_page","lastWeek","now","number","get","pr","getReviews","reviews","result","checkMerged","status","user","users","getForUser","username","smoothScroll","SmoothScroll","undefined","speed","orange","red","green","useStyles","makeStyles","theme","root","width","backgroundColor","palette","background","paper","marginBottom","boxShadow","position","transition","warning","lighten","critical","mergeable","color","progress","top","left","right","avatar","height","borderRadius","marginRight","extraDataContainer","display","alignItems","justifyContent","minWidth","reviewNumbersContainer","marginLeft","fontSize","newChip","prTitle","prProject","timeAgo","reviewNumber","FetchingProgress","withStyles","bar","LinearProgress","pullRequest","settings","forwardRef","useMemo","timeState","timeMoment","moment","timeAgoText","fromNow","newTime","subtract","isBetween","nbDays","diff","day","hours","minutes","useTimeAgo","created_at","nbApprove","nbRefuse","nbComments","detail","comments","review","isStaleReview","checkReview","id","login","submitted_at","useReviewsNumbers","classes","isMergeable","mergeable_state","ListItem","ref","className","classnames","component","href","html_url","target","button","Chip","label","ListItemAvatar","Avatar","src","avatar_url","ListItemText","primary","title","secondary","base","name","Typography","shareButton","shareLink","url","URL","window","location","origin","pathname","Object","keys","searchParams","set","Array","isArray","join","toString","useShareLink","useState","shareOpen","setShareOpen","onShareClicked","useCallback","ev","clipboardData","setData","navigator","clipboard","writeText","then","handleClose","Fragment","Tooltip","IconButton","onClick","Snackbar","anchorOrigin","vertical","horizontal","open","autoHideDuration","onClose","message","app","list","paddingTop","header","zIndex","margin","flex","loader","nbMergedContainer","headerEndContainer","cdoContainer","flexDirection","cdoAvatar","App","enabled","el","nbPullRequests","useReducer","dispatch","useEffect","URLSearchParams","search","forEach","split","useSettings","setApi","useGithubApi","setPullRequests","fetching","setFetching","_interval","fetchData","a","totalList","repository","getOpenPrs","pullRequestsList","draft","labels","find","prLabel","toLowerCase","indexOf","map","b","localeCompare","getPrReviews","pullRequestReviews","hasAlreadyApproved","index","findIndex","slice","getPrDetails","pullRequestDetail","clearInterval","catch","console","error","setInterval","useGithubPullRequests","nbMergedPullRequests","filters","nbClosed","setNbClosed","getClosedPrsLastWeek","closedPRs","merged_at","useGithubMergedPullRequests","lastElRef","useRef","cdo","setUser","weekOfYear","week","getUser","useCDO","current","onScrollToBottomStopped","document","removeEventListener","scrollToTop","onScrollToTopStopped","scrollToBottom","addEventListener","animateScroll","easing","CssBaseline","align","variant","CircularProgress","ShareLinkButton","List","PullRequestItem","Boolean","hostname","match","locale","ReactDOM","render","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fbae59a9.chunk.js","sourcesContent":["import { useEffect, useReducer } from 'react';\n\nconst initialState = {\n    token: null,\n    me: null,\n    organisation: null,\n    repositories: [],\n    filteredTags: [],\n    requiredTags: [],\n    daysBeforeWarning: '1',\n    daysBeforeCritical: '2',\n    hoursUntilNotNew: '2',\n    autoScroll: 'false',\n    cdoRotation: [],\n    minNbReviews: 2,\n    onlyNotReviewed: 'true',\n};\n\nfunction reducer(state, action) {\n    switch (action.type) {\n        case 'update':\n            if (!state.hasOwnProperty(action.key)) {\n                return state;\n            }\n            return {\n                ...state,\n                [action.key]: action.value\n            };\n        default:\n            throw new Error();\n    }\n}\n\nexport const useSettings = () => {\n    const [state, dispatch] = useReducer(reducer, initialState);\n\n    useEffect(() => {\n        const urlParams = new URLSearchParams(window.location.search);\n\n        urlParams.forEach((value, key) =>\n            dispatch({\n                type: 'update',\n                key,\n                value: Array.isArray(state[key]) ? value.split(',') : value\n            })\n        );\n\n        // if (process.env.NODE_ENV !== 'development') {\n        //     window.history.replaceState({}, document.title, window.location.pathname);\n        // }\n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    return state;\n};\n","import Octokit from '@octokit/rest';\n\nclass GithubApi {\n    constructor(opts) {\n        this.api = Octokit();\n\n        this.api.authenticate({\n            type: 'token',\n            token: opts.token\n        });\n\n        this.org = opts.org;\n    }\n\n    getFilteredData(data, predicate, time) {\n        const newData = data.filter(item => {\n            const itemDate = Date.parse(item[predicate]);\n            return itemDate > time;\n        });\n\n        const sameData = data.length === newData.length;\n\n        return [newData, sameData];\n    }\n\n    async paginate(method, params, limitPredicate, limitTime) {\n        let next = true;\n        let response = await method(params);\n        let { data } = response;\n\n        if (!!limitPredicate && !!limitTime) {\n            [data, next] = this.getFilteredData(data, limitPredicate, limitTime);\n        }\n\n        while (this.api.hasNextPage(response) && next) {\n            response = await this.api.getNextPage(response);\n            let newData = null;\n            if (!!limitPredicate && !!limitTime) {\n                [newData, next] = this.getFilteredData(\n                    response.data,\n                    limitPredicate,\n                    limitTime\n                );\n            }\n\n            data = data.concat(newData);\n        }\n        return data;\n    }\n\n    async getOpenPrs(repo) {\n        const params = {\n            owner: this.org,\n            repo,\n            state: 'open'\n        };\n\n        const prs = await this.paginate(this.api.pullRequests.getAll, params);\n\n        return prs;\n    }\n\n    async getClosedPrsLastWeek(repo) {\n        const params = {\n            owner: this.org,\n            repo,\n            state: 'closed',\n            sort: 'updated',\n            direction: 'desc',\n            per_page: 50\n        };\n\n        const lastWeek = Date.now() - 7 * 24 * 60 * 60 * 1000;\n\n        const prs = await this.paginate(\n            this.api.pullRequests.getAll,\n            params,\n            'closed_at',\n            lastWeek\n        );\n\n        return prs;\n    }\n\n    async getPrDetails(repo, number) {\n        const pr = await this.api.pullRequests.get({\n            owner: this.org,\n            repo,\n            number\n        });\n\n        return pr.data;\n    }\n\n    async getPrReviews(repo, number) {\n        const params = {\n            owner: this.org,\n            repo,\n            number\n        };\n\n        const reviews = await this.paginate(\n            this.api.pullRequests.getReviews,\n            params\n        );\n\n        return reviews;\n    }\n\n    async getPrMergeStatus(repo, number) {\n        let result = null;\n        try {\n            result = await this.api.pullRequests.checkMerged({\n                owner: this.org,\n                repo,\n                number\n            });\n        } catch (e) {\n            // do nothing\n        }\n\n        return result && result.status === 204;\n    }\n\n    async getUser(user) {\n        const result = await this.api.users.getForUser({ username: user });\n\n        return result.data;\n    }\n}\n\nexport default GithubApi;\n","import { useEffect } from 'react';\nimport SmoothScroll from 'smooth-scroll';\n\nconst smoothScroll = new SmoothScroll(undefined, {\n    speed: 40000\n});\n\nexport const useAlwaysScroll = (enabled, el, nbPullRequests) => {\n    useEffect(() => {\n        if (enabled === 'true' && el && nbPullRequests > 4) {\n            const onScrollToBottomStopped = () => {\n                document.removeEventListener('scrollStop', onScrollToBottomStopped);\n                scrollToTop();\n            };\n            const onScrollToTopStopped = () => {\n                document.removeEventListener('scrollStop', onScrollToTopStopped);\n                scrollToBottom();\n            };\n            const scrollToBottom = () => {\n                document.addEventListener('scrollStop', onScrollToBottomStopped);\n                smoothScroll.animateScroll(el, undefined, {\n                    speed: 40000,\n                    easing: 'linear'\n                });\n            };\n            const scrollToTop = () => {\n                document.addEventListener('scrollStop', onScrollToTopStopped);\n                smoothScroll.animateScroll(0, undefined, {\n                    speed: 5000,\n                    easing: 'linear'\n                });\n            };\n            document.removeEventListener('scrollStop', onScrollToBottomStopped);\n            document.removeEventListener('scrollStop', onScrollToTopStopped);\n            scrollToBottom();\n        }\n    }, [enabled, el, nbPullRequests]);\n};\n","import { makeStyles } from '@material-ui/core';\nimport { lighten } from '@material-ui/core/styles';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport LinearProgress from '@material-ui/core/LinearProgress';\n\nexport const orange = '#fcbb26';\nexport const red = '#ff5c39';\nexport const green = '#00b388';\nexport const grey = '#d9d9d6';\n\nexport const useStyles = makeStyles(theme => ({\n    root: {\n        width: '100%',\n    },\n    item: {\n        backgroundColor: theme.palette.background.paper,\n        marginBottom: '2em',\n        boxShadow: 'rgba(0, 0, 0, 0.2) 0px 1px 3px 0px, rgba(0, 0, 0, 0.14) 0px 1px 1px 0px, rgba(0, 0, 0, 0.12) 0px 2px 1px -1px',\n        position: 'relative',\n        transition: 'background-color 200ms ease-in-out',\n    },\n    warning: {\n        backgroundColor: lighten(orange, 0.6),\n        '&:hover': {\n            backgroundColor: lighten(orange, 0.4)\n        }\n    },\n    critical: {\n        backgroundColor: lighten(red, 0.6),\n        '&:hover': {\n            backgroundColor: lighten(red, 0.4),\n        }\n    },\n    mergeable: {\n        backgroundColor: lighten(green, 0.6),\n        '&:hover': {\n            backgroundColor: lighten(green, 0.45),\n        },\n        '&$warning $timeAgo': {\n            color: orange\n        },\n        '&$critical $timeAgo': {\n            color: red\n        }\n    },\n    progress: {\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        right: 0\n    },\n    avatar: {\n        width: 60,\n        height: 60,\n        borderRadius: '3px',\n        marginRight: '1em'\n    },\n    extraDataContainer: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'space-between',\n        minWidth: '17vw'\n    },\n    reviewNumbersContainer: {\n        display: 'flex',\n        alignItems: 'center',\n        '&:not(:last-of-type)': {\n            marginBottom: '0.5em',\n        },\n        '& svg': {\n            marginLeft: '0.5em',\n            fontSize: '2.5em',\n        },\n        '&.green svg': {\n            color: green\n        },\n        '&.red svg': {\n            color: red\n        },\n        '&.grey svg': {\n            color: grey\n        },\n    },\n    newChip: {\n        backgroundColor: red,\n        color: 'white',\n        position: 'absolute',\n        top: -15,\n        left: 50,\n        fontSize: '1.8vw'\n    },\n    prTitle: {\n        fontSize: '2vw'\n    },\n    prProject: {\n        fontSize: '1.8vw'\n    },\n    timeAgo: {\n        fontSize: '1.8vw'\n    },\n    reviewNumber: {\n        fontSize: '1.8vw'\n    },\n}));\n\nexport const FetchingProgress = withStyles({\n    root: {\n        height: 2,\n        backgroundColor: lighten(green, 0.5),\n    },\n    bar: {\n        backgroundColor: green,\n    },\n})(LinearProgress);\n","import React from 'react';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItem from '@material-ui/core/ListItem';\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport MessageIcon from '@material-ui/icons/Message';\nimport Chip from '@material-ui/core/Chip';\nimport Typography from '@material-ui/core/Typography';\nimport classnames from 'classnames';\n\nimport { useTimeAgo } from '../../hooks/useTimeAgo';\nimport { useReviewsNumbers } from '../../hooks/useReviewsNumbers';\nimport { useStyles, FetchingProgress } from './style';\n\nexport default ({\n                    pullRequest,\n                    settings,\n                    forwardRef\n                }) => {\n    const { timeAgoText, timeState } = useTimeAgo(pullRequest.created_at, settings);\n    const { nbApprove, nbRefuse, nbComments } = useReviewsNumbers(pullRequest);\n    const classes = useStyles();\n\n    const isMergeable = nbApprove >= settings.minNbReviews && pullRequest.detail && pullRequest.detail.mergeable === true && pullRequest.detail.mergeable_state === 'clean';\n\n    return settings.onlyNotReviewed === 'true' && nbApprove >= settings.minNbReviews ? null : (\n        <ListItem\n            ref={forwardRef}\n            className={classnames(classes.item, isMergeable && classes.mergeable, timeState === 'WARNING' && classes.warning, timeState === 'CRITICAL' && classes.critical)}\n            component=\"a\"\n            href={pullRequest.html_url}\n            target=\"_blank\"\n            button\n        >\n            {(!pullRequest.detail || !pullRequest.reviews) && <FetchingProgress className={classes.progress} />}\n            {timeState === 'NEW' && <Chip label=\"New\" className={classes.newChip} />}\n            <ListItemAvatar>\n                <Avatar className={classes.avatar} src={pullRequest.user.avatar_url} />\n            </ListItemAvatar>\n            <ListItemText\n                primary={pullRequest.title}\n                secondary={pullRequest.base.repo.name}\n                classes={{\n                    primary: classes.prTitle,\n                    secondary: classes.prProject\n                }}\n            />\n            <div className={classes.extraDataContainer}>\n                <div>\n                    <div className={`${classes.reviewNumbersContainer} green`}>\n                        <Typography className={classes.reviewNumber}>\n                            {pullRequest.reviews ? nbApprove : '-'}\n                        </Typography>\n                        <CheckBoxIcon/>\n                    </div>\n                    <div className={`${classes.reviewNumbersContainer} red`}>\n                        <Typography className={classes.reviewNumber}>\n                            {pullRequest.reviews ? nbRefuse : '-'}\n                        </Typography>\n                        <ClearIcon/>\n                    </div>\n                    <div className={`${classes.reviewNumbersContainer} grey`}>\n                        <Typography className={classes.reviewNumber}>\n                            {pullRequest.detail ? nbComments : '-'}\n                        </Typography>\n                        <MessageIcon/>\n                    </div>\n                </div>\n                <Typography className={classes.timeAgo}>\n                    {timeAgoText}\n                </Typography>\n            </div>\n        </ListItem>\n    );\n};\n","import { useMemo } from 'react';\nimport moment from 'moment';\n\nexport const useTimeAgo = (time, settings) => {\n    return useMemo(() => {\n        let timeState = 'NEUTRAL';\n        const timeMoment = moment(time);\n        const timeAgoText = timeMoment.fromNow();\n        const now = moment();\n        const newTime = moment().subtract(+settings.hoursUntilNotNew, 'hours');\n        if (timeMoment.isBetween(newTime, now)) {\n            timeState = 'NEW';\n        } else {\n            let nbDays = now.diff(timeMoment, 'days');\n            // if currently in weekend and full day has passed, skip from counter\n            if ((now.day() === 0 || now.day() === 6) &&\n                (now.hours() > timeMoment.hours() ||\n                    (now.hours() === timeMoment.hours() && now.minutes() > timeMoment.minutes())\n                )\n            ) {\n                nbDays--;\n            }\n            now.subtract(1, 'days');\n            while (now.diff(timeMoment, 'days') > 0) {\n                // if weekend, skip from counter\n                if (now.day() === 0 || now.day() === 6) {\n                    nbDays--;\n                }\n                now.subtract(1, 'days');\n            }\n            if (nbDays >= +settings.daysBeforeCritical) {\n                timeState = 'CRITICAL';\n            } else if (nbDays >= +settings.daysBeforeWarning) {\n                timeState = 'WARNING';\n            }\n        }\n\n        return {\n            timeAgoText,\n            timeState\n        };\n    }, [time, settings.hoursUntilNotNew, settings.daysBeforeWarning, settings.daysBeforeCritical]);\n};\n","import { useMemo } from 'react';\n\nexport const useReviewsNumbers = (pullRequest) => {\n    return useMemo(() => {\n        let nbApprove = 0;\n        let nbRefuse = 0;\n        const nbComments = pullRequest.detail ? pullRequest.detail.comments : 0;\n        if (pullRequest.reviews) {\n            for (const review of pullRequest.reviews) {\n                if (review) {\n                    switch (review.state) {\n                        case 'APPROVED':\n                            nbApprove++;\n                            break;\n                        case 'CHANGES_REQUESTED':\n                            // if we have a refused review, we check if there is another approved review by the same author later on\n                            let isStaleReview = false;\n                            for (const checkReview of pullRequest.reviews) {\n                                if (\n                                    checkReview.id !== review.id &&\n                                    checkReview.user.login === review.user.login &&\n                                    checkReview.state === 'APPROVED' &&\n                                    Date.parse(checkReview.submitted_at) - Date.parse(review.submitted_at) > 0\n                                ) {\n                                    isStaleReview = true;\n                                }\n                            }\n\n                            if (!isStaleReview) {\n                                nbRefuse++;\n                            }\n                            break;\n                        default:\n                        // do nothing\n                    }\n                }\n            }\n        }\n        return {\n            nbApprove,\n            nbRefuse,\n            nbComments\n        };\n    }, [pullRequest]);\n};\n","import { makeStyles } from '@material-ui/core';\n\nexport const useStyles = makeStyles(theme => ({\n    shareButton: {\n        marginRight: '2em',\n        '& svg': {\n            fontSize: '2em'\n        }\n    }\n}));\n","import React, { useCallback, useState } from 'react';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShareIcon from '@material-ui/icons/InsertLink';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nimport { useShareLink } from '../../hooks/useShareLink';\nimport { useStyles } from './style';\n\nexport default ({ settings }) => {\n    const shareLink = useShareLink(settings);\n    const [shareOpen, setShareOpen] = useState(false);\n    const onShareClicked = useCallback((ev) => {\n        if (ev.clipboardData) {\n            ev.clipboardData.setData('text/plain', shareLink);\n            setShareOpen(true);\n        } else if (window.clipboardData) {\n            window.clipboardData.setData('Text', 'custom content from click');\n            setShareOpen(true);\n        } else if (navigator.clipboard) {\n            navigator.clipboard.writeText(shareLink)\n                .then(() => setShareOpen(true));\n        }\n    }, [shareLink]);\n    const handleClose = useCallback(() => {\n        setShareOpen(false);\n    }, []);\n\n    const classes = useStyles();\n\n    return (\n        <React.Fragment>\n            <Tooltip title={shareLink}>\n                <IconButton className={classes.shareButton} onClick={onShareClicked}>\n                    <ShareIcon/>\n                </IconButton>\n            </Tooltip>\n            <Snackbar\n                anchorOrigin={{\n                    vertical: 'top',\n                    horizontal: 'center'\n                }}\n                open={shareOpen}\n                autoHideDuration={2000}\n                onClose={handleClose}\n                message=\"Copied to clipboard !\"\n            />\n        </React.Fragment>\n    );\n};\n","import { useMemo } from 'react';\n\nexport const useShareLink = (settings) => {\n    return useMemo(() => {\n        const url = new URL(`${window.location.origin}${window.location.pathname}`);\n        const settingsKeys = Object.keys(settings);\n        for (const key of settingsKeys) {\n            if (key !== 'token') {\n                url.searchParams.set(key, Array.isArray(settings[key]) ? settings[key].join(',') : settings[key]);\n            }\n        }\n        return url.toString();\n    }, [settings]);\n};\n","import { makeStyles } from '@material-ui/core';\n\nexport const useStyles = makeStyles(theme => ({\n    app: {\n        position: 'relative'\n    },\n    list: {\n        width: '100%',\n        paddingTop: 165\n    },\n    header: {\n        zIndex: 2,\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        right: 0,\n        backgroundColor: '#fafafa',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'space-around'\n    },\n    title: {\n        position: 'relative',\n        margin: '1em 0',\n        flex: 1\n    },\n    loader: {\n        marginLeft: '1em',\n        position: 'absolute',\n    },\n    nbMergedContainer: {\n        flex: 1\n    },\n    headerEndContainer: {\n        flex: 1,\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'flex-end'\n    },\n    cdoContainer: {\n        marginRight: '5vw',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    cdoAvatar: {\n        width: 60,\n        height: 60,\n        borderRadius: '3px',\n    }\n}));\n","import React, { useRef } from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport { useSettings } from './hooks/useSettings';\nimport { useGithubPullRequests } from './hooks/useGithubPullRequests';\nimport { useGithubApi } from './hooks/useGithubApi';\nimport { useAlwaysScroll } from './hooks/useAlwaysScroll';\nimport { useGithubMergedPullRequests } from './hooks/useGithubMergedPullRequests';\n\nimport PullRequestItem from './components/PullRequestItem';\nimport ShareLinkButton from './components/ShareLinkButton';\n\nimport './App.css';\nimport { useStyles } from './style';\nimport { useCDO } from './hooks/useCDO';\nimport Avatar from '@material-ui/core/Avatar';\nimport { useWeekNumber } from './hooks/useWeekNumber';\n\nfunction App() {\n    const settings = useSettings();\n    const api = useGithubApi(settings.token, settings.organisation);\n    const [pullRequests, fetching] = useGithubPullRequests(api, settings);\n    const nbMergedPullRequests = useGithubMergedPullRequests(api, settings);\n    const lastElRef = useRef(null);\n    const cdo = useCDO(api, settings);\n    const weekOfYear = useWeekNumber();\n    useAlwaysScroll(settings.autoScroll, lastElRef.current, pullRequests.length);\n\n    const classes = useStyles();\n\n    return (\n        <React.Fragment>\n            <CssBaseline />\n            <div className={classes.app}>\n                <div className={classes.header}>\n                    <div className={classes.nbMergedContainer}>\n                        <Typography align=\"center\" variant=\"h3\">\n                            {nbMergedPullRequests}\n                        </Typography>\n                        <Typography align=\"center\" variant=\"h4\">\n                            Merged since last week\n                        </Typography>\n                    </div>\n                    <Typography variant=\"h3\" align=\"center\" className={classes.title} component=\"div\">\n                        Week {weekOfYear}\n                        {fetching && <CircularProgress className={classes.loader} />}\n                    </Typography>\n                    <div className={classes.headerEndContainer}>\n                        {cdo && <div className={classes.cdoContainer}>\n                            <Typography variant=\"h5\">CDO</Typography>\n                            <Avatar src={cdo.avatar_url} className={classes.cdoAvatar} />\n                            <Typography variant=\"h5\">{cdo.name || cdo.login}</Typography>\n                        </div>}\n                        <ShareLinkButton settings={settings} />\n                    </div>\n                </div>\n                <List className={classes.list}>\n                    {pullRequests.map((pullRequest, index) => (\n                        <PullRequestItem\n                            key={`pr-${pullRequest.id}`}\n                            forwardRef={index === pullRequests.length - 1 ? lastElRef : undefined}\n                            pullRequest={pullRequest}\n                            settings={settings}\n                        />\n                    ))}\n                </List>\n            </div>\n        </React.Fragment>\n    );\n}\n\nexport default App;\n","import { useEffect, useState } from 'react';\nimport GithubApi from '../api/github';\n\nexport const useGithubApi = (token, organisation) => {\n    const [api, setApi] = useState(null);\n\n    useEffect(() => {\n        if (token && organisation) {\n            setApi(new GithubApi({ token, org: organisation }));\n        } else {\n            setApi(null);\n        }\n    }, [token, organisation]);\n\n    return api;\n};\n","import { useEffect, useState } from 'react';\n\nexport const useGithubPullRequests = (api, { me, repositories, filteredTags, requiredTags, onlyNotReviewed }) => {\n    const [pullRequests, setPullRequests] = useState([]);\n    const [fetching, setFetching] = useState(false);\n\n    useEffect(() => {\n        let _interval = null;\n        async function fetchData() {\n            setFetching(true);\n            let totalList = [];\n            for (const repository of repositories) {\n                let pullRequestsList = await api.getOpenPrs(repository);\n                totalList = [\n                    ...totalList,\n                    ...pullRequestsList.filter(\n                        pr => !pr.draft &&\n                        !pr.labels.find(\n                            prLabel => !!filteredTags.find(filter => prLabel.name.toLowerCase().indexOf(filter.toLowerCase()) > -1)\n                        ) && (!requiredTags.length || pr.labels.find(prLabel => !!requiredTags.find(filter => prLabel.name.toLowerCase().indexOf(filter.toLowerCase()) > -1)))\n                    )\n                ];\n            }\n\n            setPullRequests(\n                totalList\n                    .map(pr => ({\n                        ...pr,\n                        detail: null,\n                        reviews: null\n                    }))\n                    .sort((a, b) => a.created_at.localeCompare(b.created_at))\n            );\n            setFetching(false);\n\n            for (const pullRequest of totalList) {\n                const pullRequestReviews = await api.getPrReviews(pullRequest.base.repo.name, pullRequest.number);\n\n                const hasAlreadyApproved = me !== null && pullRequestReviews.find(review => review.state === \"APPROVED\" && review.user.login === me);\n\n                if (onlyNotReviewed && hasAlreadyApproved) {\n                    setPullRequests(prs => {\n                        const index = prs.findIndex(pr => pr.id === pullRequest.id);\n                        if (index >= 0) {\n                            return [\n                                ...prs.slice(0, index),\n                                ...prs.slice(index + 1),\n                            ];\n                        } else {\n                            return prs;\n                        }\n                    });\n                } else {\n                    const pullRequestDetail = await api.getPrDetails(pullRequest.base.repo.name, pullRequest.number);\n\n                    setPullRequests(prs => {\n                        const index = prs.findIndex(pr => pr.id === pullRequest.id);\n                        if (index >= 0) {\n                            return [\n                                ...prs.slice(0, index),\n                                {\n                                    ...prs[index],\n                                    detail: pullRequestDetail,\n                                    reviews: pullRequestReviews\n                                },\n                                ...prs.slice(index + 1),\n                            ];\n                        } else {\n                            return prs;\n                        }\n                    });\n                }\n            }\n        }\n        clearInterval(_interval);\n        if (api) {\n            fetchData()\n                .catch(console.error);\n            _interval = window.setInterval(() => {\n                fetchData()\n                    .catch(console.error);\n            }, 120000);\n        }\n\n        return () => {\n            clearInterval(_interval);\n        }\n    }, [api, repositories, filteredTags, requiredTags, me, onlyNotReviewed]);\n\n    return [pullRequests, fetching];\n};\n","import { useEffect, useState } from 'react';\n\nexport const useGithubMergedPullRequests = (api, { repositories, users, filters }) => {\n    const [nbClosed, setNbClosed] = useState(0);\n\n    useEffect(() => {\n        async function fetchData() {\n            let pullRequests = [];\n            for (const repository of repositories) {\n                const closedPRs = await api.getClosedPrsLastWeek(repository);\n                pullRequests = [\n                    ...pullRequests,\n                    ...closedPRs\n                ];\n            }\n            pullRequests = pullRequests.filter(pr => pr.merged_at);\n            setNbClosed(pullRequests.length);\n        }\n        if (api) {\n            fetchData()\n                .catch(console.error);\n        }\n    }, [api, repositories, users, filters]);\n\n    return nbClosed;\n};\n","import { useEffect, useState } from 'react';\nimport moment from 'moment';\n\nexport const useCDO = (api, settings) => {\n    const [user, setUser] = useState(null);\n\n    useEffect(() => {\n        async function fetchData() {\n            const weekOfYear = moment().week();\n            const username = settings.cdoRotation[weekOfYear % settings.cdoRotation.length];\n            const user = await api.getUser(username);\n            setUser(user);\n        }\n        if (api && settings.cdoRotation.length) {\n            fetchData()\n                .catch(console.error);\n        }\n    }, [api, settings.cdoRotation]);\n\n    return user;\n};\n","import { useMemo } from 'react';\nimport moment from 'moment';\n\nexport const useWeekNumber = () => {\n    return useMemo(() => {\n        const now = moment();\n        return now.week();\n    }, []);\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport moment from 'moment';\nimport * as serviceWorker from './serviceWorker';\n\nmoment.locale('fr');\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}